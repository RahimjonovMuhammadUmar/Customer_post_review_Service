version: '3.8'

services:
  customer_service:
    container_name: customer_service
    build: ./customer_service
    environment:
      - POSTGRES_USER=muhammadumar
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=customerdb
      - POSTGRES_HOST=database-1.c9lxq3r1itbt.us-east-1.rds.amazonaws.com
      - POSTGRES_PORT=5432
      - POST_SERVICE_PORT=9090
      - POST_SERVICE_HOST=post_service
      - LOG_LEVEL=develop
      - ENVIRONMENT=develop
    ports:
      - "9000:9000"
      


  post_service:
    container_name: post_service
    build: ./post_service
    environment:
      - POSTGRES_USER=muhammadumar
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=postdb
      - POSTGRES_HOST=database-1.c9lxq3r1itbt.us-east-1.rds.amazonaws.com
      - POSTGRES_PORT=5432
      - CUSTOMER_SERVICE_PORT=9000
      - CUSTOMER_SERVICE_HOST=customer_service
      - REVIEW_SERVICE_PORT=9900
      - REVIEW_SERVICE_HOST=review_service
      - LOG_LEVEL=develop
      - ENVIRONMENT=develop
      - KAFKA_HOST=kafka
      - KAFKA_PORT=9092
    links: 
      - customer_service
      - kafka
    ports:
      - "9090:9090"
  
  review_service:
    container_name: review_service
    build: ./review_service
    environment:
      - POSTGRES_USER=muhammadumar
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=reviewdb
      - POSTGRES_HOST=database-1.c9lxq3r1itbt.us-east-1.rds.amazonaws.com
      - POSTGRES_PORT=5432
      - POST_SERVICE_PORT=9090
      - POST_SERVICE_HOST=post_service
      - CUSTOMER_SERVICE_PORT=9000
      - CUSTOMER_SERVICE_HOST=customer_service
      - LOG_LEVEL=develop
      - ENVIRONMENT=develop
      - KAFKA_HOST=kafka
      - KAFKA_PORT=9092
    links:
      - post_service
      - kafka
    ports:
      - "9900:9900"

  api_gateway:
    container_name: api_gateway
    build: ./api_gateway
    environment:
      - POSTGRES_USER=muhammadumar
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=customerdb
      - POSTGRES_HOST=database-1.c9lxq3r1itbt.us-east-1.rds.amazonaws.com
      - POSTGRES_PORT=5432
    links:
      - redis
      - customer_service
      - post_service
      - review_service
      - kafka
    ports:
      - "8800:8800"

  redis:
    container_name: redis
    image: redis
    ports:
      - "6380:6379"      
      
  kafka-ui: 
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports: 
      - 8080:8080
    links:
      - zookeeper
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181


  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOOKEEPER_TICK_TIME=2000
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"



  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=EXTERNAL_SAME_HOST://:29092, INTERNAL://:9092
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9092, EXTERNAL_SAME_HOST://localhost:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT, EXTERNAL_SAME_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
