definitions:
  customer.Address:
    properties:
      house_number:
        type: integer
      id:
        type: integer
      street:
        type: string
    type: object
  customer.AddressRequest:
    properties:
      house_number:
        type: integer
      street:
        type: string
    type: object
  customer.CustomerRequest:
    properties:
      addresses:
        items:
          $ref: '#/definitions/customer.AddressRequest'
        type: array
      bio:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
    type: object
  customer.CustomerWithoutPost:
    properties:
      addresses:
        items:
          $ref: '#/definitions/customer.Address'
        type: array
      bio:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      phone_number:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/customer:
    post:
      consumes:
      - application/json
      description: this api creates new customer
      parameters:
      - description: Customer
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/customer.CustomerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: json
      summary: create customer api
      tags:
      - product
    put:
      consumes:
      - application/json
      description: this api updates customer by id in database
      parameters:
      - description: Customer
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/customer.CustomerWithoutPost'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: json
      summary: Update customer api
      tags:
      - product
  /v1/customer/{id}:
    get:
      consumes:
      - application/json
      description: this api finds existing customer
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: json
      summary: get customer api
      tags:
      - product
swagger: "2.0"
